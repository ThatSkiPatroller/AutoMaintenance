'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledSystem = require('styled-system');

var _reactEmotion = require('react-emotion');

var _reactEmotion2 = _interopRequireDefault(_reactEmotion);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var css = function css(props) {
  return props.css;
};

var omit = function omit(obj, blacklist) {
  var next = {};
  for (var key in obj) {
    if (blacklist.indexOf(key) > -1) continue;
    next[key] = obj[key];
  }
  return next;
};

var styleKeys = Object.keys(_styledSystem.styles).filter(function (key) {
  return typeof _styledSystem.styles[key] === 'function';
});

var propNames = styleKeys.reduce(function (a, key) {
  var names = Object.keys(_styledSystem.styles[key].propTypes);
  return [].concat(_toConsumableArray(a), _toConsumableArray(names));
}, []);

// private blacklist
var _blacklist = ['css', 'is', 'tag', 'extend'].concat(_toConsumableArray(propNames));

var tag = _react2.default.forwardRef(function (_ref, ref) {
  var _ref$blacklist = _ref.blacklist,
      blacklist = _ref$blacklist === undefined ? [] : _ref$blacklist,
      props = _objectWithoutProperties(_ref, ['blacklist']);

  var Base = props.extend || props.tag || props.is || 'div';
  var next = omit(props, typeof Base === 'string' ? [].concat(_toConsumableArray(_blacklist), _toConsumableArray(blacklist)) : ['extend']);
  return _react2.default.createElement(Base, _extends({}, next, { ref: ref }));
});

var getPropTypes = function getPropTypes(funcs) {
  return funcs.filter(function (fn) {
    return typeof fn === 'function' && _typeof(fn.propTypes) === 'object';
  }).reduce(function (a, fn) {
    return _extends({}, a, fn.propTypes);
  }, {});
};

var system = function system() {
  for (var _len = arguments.length, keysOrStyles = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    keysOrStyles[_key - 1] = arguments[_key];
  }

  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var funcs = keysOrStyles.map(function (key) {
    return _styledSystem.styles[key] || key;
  });
  var propTypes = getPropTypes(funcs);

  var Component = (0, _reactEmotion2.default)(tag).apply(undefined, [[]].concat(_toConsumableArray(funcs), [css]));

  var baseProps = _styledSystem.util.get(props, 'extend.defaultProps') || {};

  Component.defaultProps = _extends({}, baseProps, props);

  Component.propTypes = getPropTypes(funcs);
  Component.systemComponent = true;

  return Component;
};

exports.default = system;