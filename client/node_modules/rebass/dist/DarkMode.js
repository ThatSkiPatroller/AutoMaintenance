'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DarkMode = exports.invertTheme = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledComponents = require('styled-components');

var _grid = require('@rebass/grid');

var _colors = require('./colors');

var _theme = require('./theme');

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var invertTheme = function invertTheme() {
  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _theme2.default;

  var _theme$colors = theme.colors,
      colors = _theme$colors === undefined ? {} : _theme$colors,
      rest = _objectWithoutProperties(theme, ['colors']);

  var next = Object.keys(colors).reduce(function (a, key) {
    a[key] = (0, _colors.invertLuminance)(colors[key]);
    return a;
  }, {});

  return _extends({}, rest, {
    colors: next
  });
};

exports.invertTheme = invertTheme;

var DarkMode = exports.DarkMode = function (_React$Component) {
  _inherits(DarkMode, _React$Component);

  function DarkMode() {
    _classCallCheck(this, DarkMode);

    return _possibleConstructorReturn(this, (DarkMode.__proto__ || Object.getPrototypeOf(DarkMode)).apply(this, arguments));
  }

  _createClass(DarkMode, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _styledComponents.ThemeProvider,
        { theme: invertTheme },
        _react2.default.createElement(_grid.Box, this.props)
      );
    }
  }]);

  return DarkMode;
}(_react2.default.Component);

DarkMode.defaultProps = {
  color: 'black',
  bg: 'white'
};
exports.default = DarkMode;