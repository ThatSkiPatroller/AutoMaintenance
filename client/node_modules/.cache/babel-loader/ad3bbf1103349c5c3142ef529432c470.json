{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction createRippleHandler(instance, eventName, action, cb) {\n  return function handleEvent(event) {\n    if (cb) {\n      cb.call(instance, event);\n    }\n\n    if (event.defaultPrevented) {\n      return false;\n    }\n\n    if (instance.ripple) {\n      instance.ripple[action](event);\n    }\n\n    if (instance.props && typeof instance.props[\"on\".concat(eventName)] === 'function') {\n      instance.props[\"on\".concat(eventName)](event);\n    }\n\n    return true;\n  };\n}\n\nvar _default = createRippleHandler;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Trace/Project 3/AutoMaintenance/client/node_modules/material-ui/ButtonBase/createRippleHandler.js"],"names":["Object","defineProperty","exports","value","default","createRippleHandler","instance","eventName","action","cb","handleEvent","event","call","defaultPrevented","ripple","props","concat","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,mBAAT,CAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,MAAlD,EAA0DC,EAA1D,EAA8D;AAC5D,SAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAIF,EAAJ,EAAQ;AACNA,MAAAA,EAAE,CAACG,IAAH,CAAQN,QAAR,EAAkBK,KAAlB;AACD;;AAED,QAAIA,KAAK,CAACE,gBAAV,EAA4B;AAC1B,aAAO,KAAP;AACD;;AAED,QAAIP,QAAQ,CAACQ,MAAb,EAAqB;AACnBR,MAAAA,QAAQ,CAACQ,MAAT,CAAgBN,MAAhB,EAAwBG,KAAxB;AACD;;AAED,QAAIL,QAAQ,CAACS,KAAT,IAAkB,OAAOT,QAAQ,CAACS,KAAT,CAAe,KAAKC,MAAL,CAAYT,SAAZ,CAAf,CAAP,KAAkD,UAAxE,EAAoF;AAClFD,MAAAA,QAAQ,CAACS,KAAT,CAAe,KAAKC,MAAL,CAAYT,SAAZ,CAAf,EAAuCI,KAAvC;AACD;;AAED,WAAO,IAAP;AACD,GAlBD;AAmBD;;AAED,IAAIM,QAAQ,GAAGZ,mBAAf;AACAH,OAAO,CAACE,OAAR,GAAkBa,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction createRippleHandler(instance, eventName, action, cb) {\n  return function handleEvent(event) {\n    if (cb) {\n      cb.call(instance, event);\n    }\n\n    if (event.defaultPrevented) {\n      return false;\n    }\n\n    if (instance.ripple) {\n      instance.ripple[action](event);\n    }\n\n    if (instance.props && typeof instance.props[\"on\".concat(eventName)] === 'function') {\n      instance.props[\"on\".concat(eventName)](event);\n    }\n\n    return true;\n  };\n}\n\nvar _default = createRippleHandler;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}