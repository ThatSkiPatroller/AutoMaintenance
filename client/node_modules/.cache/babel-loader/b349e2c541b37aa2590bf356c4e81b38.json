{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trace\\\\Project 3\\\\AutoMaintenance\\\\client\\\\src\\\\pages\\\\Appointments\\\\AppointmentsForm.js\";\n// Importing React since we are using React.\nimport React from 'react'; // Importing UI components from material-ui-next\n\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport DateFnsUtils from \"@date-io/date-fns\"; // import\n\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\"; // Style for add appointments form.\n\nconst styles = {\n  textField: {\n    marginTop: 60\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    maxWidth: '85%'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n};\n\nclass AppointmentsForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDealerMenuOption = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      this.props.handleAppointmentDealerChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      Dealers,\n      clinics\n    } = this.props;\n    const FORMAT = 'MM/DD/YYYY';\n\n    function disableWeekends(date) {\n      return date.getDay() === 0 || date.getDay() === 6;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Add an appointment\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"appointment-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"appointment-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \"Appointment name\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Specify a name for the appointment to help identify the appointment later.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"appointment-name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.appointmentName,\n      onChange: this.props.handleAppointmentNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, this.props.appointmentNameError)), /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"select-Dealer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Select a Dealer\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Select the Dealer associated with the scheduled appointment.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"Dealer\",\n      select: true,\n      InputLabelProps: {\n        shrink: true\n      },\n      className: classes.textField,\n      value: this.state.value,\n      onChange: this.handleDealerMenuOption,\n      SelectProps: {\n        name: 'value'\n      },\n      margin: \"normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, Dealers.map(Dealer => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        key: Dealer._id,\n        value: Dealer.lastname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 30\n        }\n      }, \"Dr. \", Dealer.lastname);\n    })), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, this.props.appointmentDealerError)), /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"appointment-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Appointment date (HH:MM AM/PM)\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Use the time picker to specify the time of the appointment.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"appointment-date\",\n      type: \"time\",\n      defaultValue: \"\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.appointmentDate,\n      onChange: this.props.handleAppointmentDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, this.props.appointmentTimeError)), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      className: classes.button,\n      onClick: this.props.handleFormSubmit,\n      color: \"primary\",\n      variant: \"raised\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Add appointment\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, this.props.formSuccessMessage)))));\n  }\n\n}\n\nexport default withStyles(styles)(AppointmentsForm);","map":{"version":3,"sources":["C:/Users/Trace/Project 3/AutoMaintenance/client/src/pages/Appointments/AppointmentsForm.js"],"names":["React","Typography","MenuItem","FormControl","Button","TextField","Card","CardContent","withStyles","InputLabel","Tooltip","IconButton","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","styles","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","borderStyle","borderWidth","borderColor","maxWidth","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","AppointmentsForm","Component","handleDealerMenuOption","event","setState","target","name","value","preventDefault","props","handleAppointmentDealerChange","state","render","classes","Dealers","clinics","FORMAT","disableWeekends","date","getDay","shrink","appointmentName","handleAppointmentNameChange","appointmentNameError","map","Dealer","_id","lastname","appointmentDealerError","appointmentDate","handleAppointmentDateChange","appointmentTimeError","handleFormSubmit","formSuccessMessage"],"mappings":"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","sourcesContent":["// Importing React since we are using React.\nimport React from 'react';\n// Importing UI components from material-ui-next\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\nimport DateFnsUtils from \"@date-io/date-fns\"; // import\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\n// Style for add appointments form.\nconst styles = {\n  textField: {\n    marginTop: 60,\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    maxWidth: '85%',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n};\n\nclass AppointmentsForm extends React.Component {\n  handleDealerMenuOption = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    this.props.handleAppointmentDealerChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes, Dealers, clinics } = this.props;\n    const FORMAT = 'MM/DD/YYYY';\n\n    function disableWeekends(date) {\n      return date.getDay() === 0 || date.getDay() === 6;\n    }\n\n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n            Add an appointment\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"appointment-form\">\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"appointment-name\">\n                  <span>\n                    Appointment name\n                    <Tooltip  \n                      title=\"Specify a name for the appointment to help identify the appointment later.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"appointment-name\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.appointmentName}\n                  onChange={this.props.handleAppointmentNameChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.appointmentNameError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"select-Dealer\">\n                  <span>\n                    Select a Dealer\n                    <Tooltip  \n                      title=\"Select the Dealer associated with the scheduled appointment.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField \n                  id='Dealer'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleDealerMenuOption} \n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    {Dealers.map(Dealer => {\n                      return <MenuItem key={Dealer._id} value={Dealer.lastname}>Dr. {Dealer.lastname}</MenuItem>;\n                    })}\n                  </TextField>\n                  <Typography className={classes.formError} component=\"p\">{this.props.appointmentDealerError}</Typography>\n              </FormControl>\n                \n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"appointment-time\">\n                  <span>\n                    Appointment date (HH:MM AM/PM)\n\n                    <Tooltip  \n                      title=\"Use the time picker to specify the time of the appointment.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"appointment-date\"\n                  type=\"time\"\n                  defaultValue=\"\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.appointmentDate}\n                  onChange={this.props.handleAppointmentDateChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.appointmentTimeError}</Typography>\n              </FormControl>\n\n              <Button \n                size=\"large\" \n                className={classes.button} \n                onClick={this.props.handleFormSubmit}\n                color=\"primary\" \n                variant=\"raised\"\n              >\n                Add appointment\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.formSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(AppointmentsForm);\n"]},"metadata":{},"sourceType":"module"}