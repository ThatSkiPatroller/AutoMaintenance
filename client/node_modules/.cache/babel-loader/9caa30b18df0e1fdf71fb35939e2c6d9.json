{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trace\\\\Project 3\\\\AutoMaintenance\\\\client\\\\src\\\\pages\\\\DealerList\\\\DealerList.js\";\n// Importing React since we are using React.\nimport React, { Component } from \"react\"; // Importing Navbar component.\n\nimport NavBar from '../../Components/AppBar';\nimport DealerInfo from './DealerInfo';\nimport { withStyles } from 'material-ui/styles';\nimport Paper from 'material-ui/Paper';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid'; // Import Sidebar component.\n\nimport Sidebar from '../../Components/Sidebar';\nimport dealerData from '../../dealerData'; //Style\n\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    paddingTop: 16,\n    paddingBottom: 16,\n    display: 'flex',\n    flexWrap: 'wrap'\n  }),\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%'\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#86BBD8',\n    padding: theme.spacing.unit * 3\n  },\n  DealerClinicList: {\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A'\n  },\n  clinicSection: {\n    marginTop: 45\n  }\n});\n\nclass DealerList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      DealerFirstName: \"\",\n      DealerLastName: \"\",\n      DealerClinic: \"\",\n      DealerPhone: \"\",\n      Dealers: [],\n      clinicName: \"\",\n      clinicAddress: \"\",\n      clinicCity: \"\",\n      clinicState: \"\",\n      clinicZip: \"\",\n      clinicPhone: \"\",\n      clinics: [],\n      DealerFirstNameError: \"\",\n      DealerLastNameError: \"\",\n      DealerClinicError: \"\",\n      DealerPhoneError: \"\",\n      clinicNameError: \"\",\n      clinicAddressError: \"\",\n      clinicCityError: \"\",\n      clinicStateError: \"\",\n      clinicZipError: \"\",\n      clinicPhoneError: \"\",\n      DealerFormSuccessMessage: \"\",\n      clinicFormSuccessMessage: \"\"\n    };\n  }\n\n  // When the component mounts, load all Dealers and clinics and save them to this.state.Dealers and this.state.clinics.\n  componentDidMount() {}\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return [/*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.appFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: classes.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 70\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"display1\",\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Dealers near your area\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-content-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 4,\n      className: classes.DealerClinicList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"Dealer list\"), dealerData.map(Dealer => {\n      return /*#__PURE__*/React.createElement(DealerInfo, {\n        id: Dealer.id,\n        key: Dealer.id,\n        DealerFirstName: Dealer.name,\n        DealerLastName: Dealer.address,\n        DealerClinic: Dealer.phoneNo,\n        DealerPhone: Dealer.phoneNo,\n        deleteDealer: this.deleteDealer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      });\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 16,\n      className: classes.clinicSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }))))))];\n  }\n\n} // Exporting the DealerList component so that the App.js file\n// can use/render the My Dealer List page.\n\n\nexport default withStyles(styles)(DealerList);","map":{"version":3,"sources":["C:/Users/Trace/Project 3/AutoMaintenance/client/src/pages/DealerList/DealerList.js"],"names":["React","Component","NavBar","DealerInfo","withStyles","Paper","Typography","Grid","Sidebar","dealerData","styles","theme","root","mixins","gutters","paddingTop","paddingBottom","display","flexWrap","appFrame","zIndex","overflow","position","width","content","flexGrow","backgroundColor","padding","spacing","unit","DealerClinicList","borderStyle","borderWidth","borderColor","clinicSection","marginTop","DealerList","state","DealerFirstName","DealerLastName","DealerClinic","DealerPhone","Dealers","clinicName","clinicAddress","clinicCity","clinicState","clinicZip","clinicPhone","clinics","DealerFirstNameError","DealerLastNameError","DealerClinicError","DealerPhoneError","clinicNameError","clinicAddressError","clinicCityError","clinicStateError","clinicZipError","clinicPhoneError","DealerFormSuccessMessage","clinicFormSuccessMessage","componentDidMount","render","classes","props","textAlign","map","Dealer","id","name","address","phoneNo","deleteDealer"],"mappings":"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","sourcesContent":["// Importing React since we are using React.\nimport React, { Component } from \"react\";\n// Importing Navbar component.\nimport NavBar from '../../Components/AppBar';\nimport DealerInfo from './DealerInfo';\nimport { withStyles } from 'material-ui/styles';\nimport Paper from 'material-ui/Paper';\nimport Typography from 'material-ui/Typography';\nimport Grid from 'material-ui/Grid';\n// Import Sidebar component.\nimport Sidebar from '../../Components/Sidebar';\nimport dealerData from '../../dealerData'\n\n//Style\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    paddingTop: 16,\n    paddingBottom: 16,\n    display: 'flex',\n    flexWrap: 'wrap',\n  }),\n  appFrame: {\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: '#86BBD8',\n    padding: theme.spacing.unit * 3,\n  },\n  DealerClinicList: {\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n  },\n  clinicSection: {\n    marginTop: 45,\n  },\n});\n\nclass DealerList extends Component {\n  state = {\n    DealerFirstName: \"\",\n    DealerLastName: \"\",\n    DealerClinic: \"\",\n    DealerPhone: \"\",\n    Dealers: [],\n    clinicName: \"\",\n    clinicAddress: \"\",\n    clinicCity: \"\",\n    clinicState: \"\",\n    clinicZip: \"\",\n    clinicPhone: \"\",\n    clinics: [],\n    DealerFirstNameError: \"\",\n    DealerLastNameError: \"\",\n    DealerClinicError: \"\",\n    DealerPhoneError: \"\",\n    clinicNameError: \"\",\n    clinicAddressError: \"\",\n    clinicCityError: \"\",\n    clinicStateError: \"\",\n    clinicZipError: \"\",\n    clinicPhoneError: \"\",\n    DealerFormSuccessMessage: \"\",  \n    clinicFormSuccessMessage: \"\",  \n  };\n\n  // When the component mounts, load all Dealers and clinics and save them to this.state.Dealers and this.state.clinics.\n  componentDidMount() {\n    \n  }\n  render() {\n    const { classes } = this.props;\n    return [\n      <NavBar />,  \n      <div className={classes.appFrame}>\n        <Sidebar />\n        <main className={classes.content}>\n          <div style={{ padding: 70 }}>\n            <Grid container spacing={24}>\n              <Grid item xs={12}>\n                <Typography variant=\"display1\" align=\"left\">\n                  Dealers near your area\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <div className=\"main-content-section\">\n              <Grid container spacing={16}>\n                \n                <Grid item xs={12} sm={12} md={6}>\n                  <Paper elevation={4} className={classes.DealerClinicList}>\n                    <Typography gutterBottom variant=\"headline\" component=\"h2\" style={{textAlign: 'center'}} >\n                      Dealer list\n                    </Typography>\n                     {dealerData.map(Dealer => {\n                       return (\n                        <DealerInfo \n                          id={Dealer.id}\n                          key={Dealer.id}\n                          DealerFirstName={Dealer.name}\n                          DealerLastName={Dealer.address}\n                          DealerClinic={Dealer.phoneNo}\n                          DealerPhone={Dealer.phoneNo}\n                          deleteDealer = { this.deleteDealer } />\n                      );\n                    })}\n                  </Paper>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={16} className={classes.clinicSection}>\n                <Grid item xs={12} sm={12} md={6}>\n                </Grid>\n               \n              </Grid>\n            </div>\n          </div>\n        </main>\n      </div>,\n    ];\n  }\n}\n\n// Exporting the DealerList component so that the App.js file\n// can use/render the My Dealer List page.\nexport default withStyles(styles)(DealerList);\n"]},"metadata":{},"sourceType":"module"}