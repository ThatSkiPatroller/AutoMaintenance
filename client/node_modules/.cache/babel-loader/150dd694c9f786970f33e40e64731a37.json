{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _SelectInput = _interopRequireDefault(require(\"./SelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\")); // @inheritedComponent Input\n// Import to enforce the CSS injection order\n\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      width: '100%'\n    },\n    select: {\n      '-moz-appearance': 'none',\n      // Reset\n      '-webkit-appearance': 'none',\n      // Reset\n      // When interacting quickly, the text can end up selected.\n      // Native select can't be selected either.\n      userSelect: 'none',\n      paddingRight: theme.spacing.unit * 4,\n      width: \"calc(100% - \".concat(theme.spacing.unit * 4, \"px)\"),\n      minWidth: theme.spacing.unit * 2,\n      // So it doesn't collapse.\n      cursor: 'pointer',\n      '&:focus': {\n        // Show that it's not an text input\n        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n        borderRadius: 0 // Reset Chrome style\n\n      },\n      // Remove Firefox focus border\n      '&:-moz-focusring': {\n        color: 'transparent',\n        textShadow: '0 0 0 #000'\n      },\n      // Remove IE11 arrow\n      '&::-ms-expand': {\n        display: 'none'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n    selectMenu: {\n      width: 'auto',\n      // Fix Safari textOverflow\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      minHeight: '1.1875em' // Reset (19px), match the native input line-height\n\n    },\n    disabled: {},\n    icon: {\n      // We use a position absolute over a flexbox in order to forward the pointer events\n      // to the input.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 12px)',\n      // Center vertically\n      color: theme.palette.action.active,\n      'pointer-events': 'none' // Don't block pointer events on the select under the icon.\n\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Select(props) {\n  var autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      input = props.input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      multiple = props.multiple,\n      native = props.native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\"]);\n  return _react.default.cloneElement(input, (0, _objectSpread2.default)({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: _SelectInput.default,\n    inputProps: (0, _objectSpread2.default)({\n      autoWidth: autoWidth,\n      children: children,\n      classes: classes,\n      displayEmpty: displayEmpty,\n      IconComponent: IconComponent,\n      MenuProps: MenuProps,\n      multiple: multiple,\n      native: native,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps,\n      type: undefined\n    }, inputProps, input ? input.props.inputProps : {})\n  }, other));\n}\n\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: _propTypes.default.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  displayEmpty: _propTypes.default.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Properties applied to the `input` element.\n   * When `native` is `true`, the properties are applied on the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the `Menu` element.\n   */\n  MenuProps: _propTypes.default.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  native: _propTypes.default.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Useful in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Useful in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` property is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: _propTypes.default.func,\n\n  /**\n   * Properties applied to the clickable div element.\n   */\n  SelectDisplayProps: _propTypes.default.object,\n\n  /**\n   * The input value.\n   * This property is required when the `native` property is `false` (default).\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))])\n} : {};\nSelect.defaultProps = {\n  autoWidth: false,\n  displayEmpty: false,\n  IconComponent: _ArrowDropDown.default,\n  input: _react.default.createElement(_Input.default, null),\n  multiple: false,\n  native: false\n};\nSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSelect'\n})(Select);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Trace/Project 3/AutoMaintenance/client/node_modules/material-ui/Select/Select.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","styles","_objectSpread2","_objectWithoutProperties2","_react","_propTypes","_SelectInput","_withStyles","_ArrowDropDown","_Input","theme","root","position","width","select","userSelect","paddingRight","spacing","unit","concat","minWidth","cursor","background","palette","type","borderRadius","color","textShadow","display","selectMenu","textOverflow","whiteSpace","overflow","minHeight","disabled","icon","right","top","action","active","Select","props","autoWidth","children","classes","displayEmpty","IconComponent","input","inputProps","MenuProps","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","other","cloneElement","inputComponent","undefined","propTypes","process","env","NODE_ENV","bool","node","object","isRequired","oneOfType","string","func","element","onChange","number","arrayOf","defaultProps","createElement","muiName","_default","name"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _SelectInput = _interopRequireDefault(require(\"./SelectInput\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\n// @inheritedComponent Input\n// Import to enforce the CSS injection order\nvar styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      width: '100%'\n    },\n    select: {\n      '-moz-appearance': 'none',\n      // Reset\n      '-webkit-appearance': 'none',\n      // Reset\n      // When interacting quickly, the text can end up selected.\n      // Native select can't be selected either.\n      userSelect: 'none',\n      paddingRight: theme.spacing.unit * 4,\n      width: \"calc(100% - \".concat(theme.spacing.unit * 4, \"px)\"),\n      minWidth: theme.spacing.unit * 2,\n      // So it doesn't collapse.\n      cursor: 'pointer',\n      '&:focus': {\n        // Show that it's not an text input\n        background: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.05)' : 'rgba(255, 255, 255, 0.05)',\n        borderRadius: 0 // Reset Chrome style\n\n      },\n      // Remove Firefox focus border\n      '&:-moz-focusring': {\n        color: 'transparent',\n        textShadow: '0 0 0 #000'\n      },\n      // Remove IE11 arrow\n      '&::-ms-expand': {\n        display: 'none'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n    selectMenu: {\n      width: 'auto',\n      // Fix Safari textOverflow\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      minHeight: '1.1875em' // Reset (19px), match the native input line-height\n\n    },\n    disabled: {},\n    icon: {\n      // We use a position absolute over a flexbox in order to forward the pointer events\n      // to the input.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 12px)',\n      // Center vertically\n      color: theme.palette.action.active,\n      'pointer-events': 'none' // Don't block pointer events on the select under the icon.\n\n    }\n  };\n};\n\nexports.styles = styles;\n\nfunction Select(props) {\n  var autoWidth = props.autoWidth,\n      children = props.children,\n      classes = props.classes,\n      displayEmpty = props.displayEmpty,\n      IconComponent = props.IconComponent,\n      input = props.input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      multiple = props.multiple,\n      native = props.native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\"]);\n  return _react.default.cloneElement(input, (0, _objectSpread2.default)({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: _SelectInput.default,\n    inputProps: (0, _objectSpread2.default)({\n      autoWidth: autoWidth,\n      children: children,\n      classes: classes,\n      displayEmpty: displayEmpty,\n      IconComponent: IconComponent,\n      MenuProps: MenuProps,\n      multiple: multiple,\n      native: native,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps,\n      type: undefined\n    }, inputProps, input ? input.props.inputProps : {})\n  }, other));\n}\n\nSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: _propTypes.default.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Useful to extend the style applied to components.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  displayEmpty: _propTypes.default.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * Properties applied to the `input` element.\n   * When `native` is `true`, the properties are applied on the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the `Menu` element.\n   */\n  MenuProps: _propTypes.default.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  native: _propTypes.default.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Useful in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Useful in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` property is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: _propTypes.default.func,\n\n  /**\n   * Properties applied to the clickable div element.\n   */\n  SelectDisplayProps: _propTypes.default.object,\n\n  /**\n   * The input value.\n   * This property is required when the `native` property is `false` (default).\n   */\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]))])\n} : {};\nSelect.defaultProps = {\n  autoWidth: false,\n  displayEmpty: false,\n  IconComponent: _ArrowDropDown.default,\n  input: _react.default.createElement(_Input.default, null),\n  multiple: false,\n  native: false\n};\nSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSelect'\n})(Select);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}