{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trace\\\\Project 3\\\\AutoMaintenance\\\\client\\\\src\\\\pages\\\\NewAppointments\\\\NewAppointmentForm.js\";\n// Importing React since we are using React.\nimport React from 'react'; // Importing UI components from material-ui-next\n\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton'; // Style for add appointments form.\n\nconst styles = {\n  textField: {\n    marginTop: 60\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    maxWidth: '85%'\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white'\n  },\n  formError: {\n    color: 'red'\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10\n  }\n};\n\nclass NewAppointmentForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDealerMenuOption = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      event.preventDefault();\n      this.props.handleAppointmentDealerChange(event);\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      Dealers,\n      clinics\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"headline\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Add an appointment\"), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"appointment-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"appointment-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, \"Appointment name\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Specify a name for the appointment to help identify the appointment later.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"appointment-name\",\n      InputLabelProps: {\n        shrink: true\n      },\n      margin: \"normal\",\n      className: classes.textField,\n      value: this.props.appointmentName,\n      onChange: this.props.handleAppointmentNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, this.props.appointmentNameError)), /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"appointment-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \"Appointment date\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Use the date picker to specify the date of the appointment.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"appointment-date\",\n      type: \"date\",\n      defaultValue: \"MM-DD-YYYY\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.appointmentDate,\n      onChange: this.props.handleAppointmentDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, this.props.appointmentDateError)), /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      htmlFor: \"appointment-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 19\n      }\n    }, \"Appointment time (HH:MM AM/PM)\", /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Use the time picker to specify the time of the appointment.\",\n      placement: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"material-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 36\n      }\n    }, \"help\"))))), /*#__PURE__*/React.createElement(TextField, {\n      id: \"appointment-time\",\n      type: \"time\",\n      defaultValue: \"\",\n      className: classes.textField,\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.props.appointmentTime,\n      onChange: this.props.handleAppointmentTimeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formError,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, this.props.appointmentTimeError)), /*#__PURE__*/React.createElement(Button, {\n      size: \"large\",\n      className: classes.button,\n      onClick: this.props.handleFormSubmit,\n      color: \"primary\",\n      variant: \"raised\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \"Add appointment\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.formSuccess,\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, this.props.formSuccessMessage)))));\n  }\n\n}\n\nexport default withStyles(styles)(NewAppointmentForm);","map":{"version":3,"sources":["C:/Users/Trace/Project 3/AutoMaintenance/client/src/pages/NewAppointments/NewAppointmentForm.js"],"names":["React","Typography","MenuItem","FormControl","Button","TextField","Card","CardContent","withStyles","InputLabel","Tooltip","IconButton","styles","textField","marginTop","typography","htmlFontSize","root","display","flexWrap","borderStyle","borderWidth","borderColor","maxWidth","formControl","minWidth","button","padding","backgroundColor","color","formError","formSuccess","NewAppointmentForm","Component","handleDealerMenuOption","event","setState","target","name","value","preventDefault","props","handleAppointmentDealerChange","state","render","classes","Dealers","clinics","shrink","appointmentName","handleAppointmentNameChange","appointmentNameError","appointmentDate","handleAppointmentDateChange","appointmentDateError","appointmentTime","handleAppointmentTimeChange","appointmentTimeError","handleFormSubmit","formSuccessMessage"],"mappings":"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","sourcesContent":["// Importing React since we are using React.\nimport React from 'react';\n// Importing UI components from material-ui-next\nimport Typography from 'material-ui/Typography';\nimport { MenuItem } from 'material-ui/Menu';\nimport { FormControl } from 'material-ui/Form';\nimport Button from 'material-ui/Button';\nimport TextField from 'material-ui/TextField';\nimport Card, { CardContent } from 'material-ui/Card';\nimport { withStyles } from 'material-ui/styles';\nimport { InputLabel } from 'material-ui/Input';\nimport Tooltip from 'material-ui/Tooltip';\nimport IconButton from 'material-ui/IconButton';\n\n// Style for add appointments form.\nconst styles = {\n  textField: {\n    marginTop: 60,\n  },\n  // Tell Material-UI what's the font-size on the html element is.\n  typography: {\n    htmlFontSize: 40,\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    borderStyle: 'solid',\n    borderWidth: 4,\n    borderColor: '#33658A',\n    maxWidth: '85%',\n  },\n  formControl: {\n    minWidth: 120,\n    marginTop: 30,\n  },\n  button: {\n    marginTop: 20,\n    padding: 15,\n    backgroundColor: '#33658A',\n    color: 'white',\n  },\n  formError: {\n    color: 'red',\n  },\n  formSuccess: {\n    color: 'green',\n    marginTop: 10,\n  }\n};\n\nclass NewAppointmentForm extends React.Component {\n  handleDealerMenuOption = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    event.preventDefault();\n    this.props.handleAppointmentDealerChange(event);\n  }\n\n  state = {\n    value: '',\n  }\n\n  render() {\n    const { classes, Dealers, clinics } = this.props;\n\n    return (\n      <div>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography gutterBottom variant=\"headline\" component=\"h2\">\n            Add an appointment\n            </Typography>\n            <form noValidate autoComplete=\"off\" id=\"appointment-form\">\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"appointment-name\">\n                  <span>\n                    Appointment name\n                    <Tooltip  \n                      title=\"Specify a name for the appointment to help identify the appointment later.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"appointment-name\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  margin=\"normal\"\n                  className={classes.textField}\n                  value={this.props.appointmentName}\n                  onChange={this.props.handleAppointmentNameChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.appointmentNameError}</Typography>\n              </FormControl>\n\n           {/*    <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"select-Dealer\">\n                  <span>\n                    Select a Dealer\n                    <Tooltip  \n                      title=\"Select the Dealer associated with the scheduled appointment.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField \n                  id='Dealer'\n                  select\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  className={classes.textField} \n                  value={this.state.value}\n                  onChange={this.handleDealerMenuOption} \n                  SelectProps={{ name: 'value'}} \n                  margin=\"normal\">\n                    {Dealers.map(Dealer => {\n                      return <MenuItem key={Dealer._id} value={Dealer.lastname}>Dr. {Dealer.lastname}</MenuItem>;\n                    })}\n                  </TextField>\n                  <Typography className={classes.formError} component=\"p\">{this.props.appointmentDealerError}</Typography>\n              </FormControl>\n*/}\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"appointment-date\">\n                  <span>\n                    Appointment date\n                    <Tooltip  \n                      title=\"Use the date picker to specify the date of the appointment.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"appointment-date\"\n                  type=\"date\"\n                  defaultValue=\"MM-DD-YYYY\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.appointmentDate}\n                  onChange={this.props.handleAppointmentDateChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.appointmentDateError}</Typography>\n              </FormControl>\n\n              <FormControl className={classes.formControl} fullWidth>\n                <InputLabel htmlFor=\"appointment-time\">\n                  <span>\n                    Appointment time (HH:MM AM/PM)\n                    <Tooltip  \n                      title=\"Use the time picker to specify the time of the appointment.\"\n                      placement=\"top\">\n                      <IconButton> <i className=\"material-icons\">help</i></IconButton>\n                    </Tooltip>\n                  </span>\n                </InputLabel>\n                <TextField\n                  id=\"appointment-time\"\n                  type=\"time\"\n                  defaultValue=\"\"\n                  className={classes.textField}\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.props.appointmentTime}\n                  onChange={this.props.handleAppointmentTimeChange}\n                />\n                <Typography className={classes.formError} component=\"p\">{this.props.appointmentTimeError}</Typography>\n              </FormControl>\n\n              <Button \n                size=\"large\" \n                className={classes.button} \n                onClick={this.props.handleFormSubmit}\n                color=\"primary\" \n                variant=\"raised\"\n              >\n                Add appointment\n              </Button>\n              <Typography className={classes.formSuccess} component=\"p\">{this.props.formSuccessMessage}</Typography>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(NewAppointmentForm);\n"]},"metadata":{},"sourceType":"module"}