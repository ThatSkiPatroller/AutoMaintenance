{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trace\\\\codeWork\\\\AutoMaintenance\\\\carmaintainance\\\\src\\\\components\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  var _s = $RefreshSig$();\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().max(15, \"Username is too long\").min(6, \"Username is too short\").required(\"A username is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"An email is required\"),\n    password: Yup.string().required(\"A password is required\"),\n    confirm_password: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords do not match\")\n  });\n\n  const WithMaterialUI = () => {\n    _s();\n\n    const formik = useFormik({\n      initialValues: {\n        username: 'username',\n        email: 'email@email.com',\n        password: 'fooseball',\n        confirm_password: 'fooseball'\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        alert(JSON.stringify(values, null, 2));\n      }\n    });\n  };\n\n  _s(WithMaterialUI, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n    return [useFormik];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"username\",\n        placeholder: \"username\",\n        value: Formik.values.username,\n        onChange: Formik.handleChange,\n        error: formik.touched.username && Boolean(formik.errors.username),\n        helperText: formik.touched.username && formik.errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"email\",\n        placeholder: \"email\",\n        value: Formik.values.email,\n        onChange: Formik.handleChange,\n        error: Formik.touched.email && Boolean(formik.errors.email),\n        helperText: formik.touched.email && formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"password\",\n        placeholder: \"password\",\n        value: Formik.values.password,\n        onChange: Formik.handleChange,\n        error: Formik.touched.password && Boolean(formik.errors.password),\n        helperText: formik.touched.password && formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        id: \"confirm_password\",\n        placeholder: \"confirm_password\",\n        value: Formik.values.confirm_password,\n        onChange: Formik.handleChange,\n        error: Formik.touched.confirm_password && Boolean(formik.errors.confirm_password),\n        helperText: formik.touched.confirm_password && formik.errors.confirm_password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Trace/codeWork/AutoMaintenance/carmaintainance/src/components/Signup.js"],"names":["React","Component","useFormik","Yup","Button","TextField","Signup","validationSchema","object","shape","username","string","max","min","required","email","password","confirm_password","oneOf","ref","WithMaterialUI","formik","initialValues","onSubmit","values","alert","JSON","stringify","Formik","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\n\r\nfunction Signup () {\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n    .max(15, \"Username is too long\")\r\n    .min(6, \"Username is too short\")\r\n    .required(\"A username is required\"),\r\n    email: Yup.string()\r\n    .email(\"Email is invalid\")\r\n    .required(\"An email is required\"),\r\n    password: Yup.string().required(\"A password is required\"),\r\n    confirm_password: Yup.string().oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Passwords do not match\"\r\n    )\r\n});\r\n\r\nconst WithMaterialUI = () => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: 'username',\r\n            email: 'email@email.com',\r\n            password: 'fooseball',\r\n            confirm_password: 'fooseball',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            alert(JSON.stringify(values, null, 2))\r\n        }\r\n    })\r\n}\r\n    return (\r\n        <div>\r\n            <form onSubmit={Formik.handleSubmit}>\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    placeholder=\"username\"\r\n                    value={Formik.values.username}\r\n                    onChange={Formik.handleChange}\r\n                    error={formik.touched.username && Boolean(formik.errors.username)}\r\n                    helperText={formik.touched.username && formik.errors.username}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    placeholder=\"email\"\r\n                    value={Formik.values.email}\r\n                    onChange={Formik.handleChange}\r\n                    error={Formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={Formik.values.password}\r\n                    onChange={Formik.handleChange}\r\n                    error={Formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id=\"confirm_password\"\r\n                    placeholder=\"confirm_password\"\r\n                    value={Formik.values.confirm_password}\r\n                    onChange={Formik.handleChange}\r\n                    error={Formik.touched.confirm_password && Boolean(formik.errors.confirm_password)}\r\n                    helperText={formik.touched.confirm_password && formik.errors.confirm_password}\r\n                />\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}