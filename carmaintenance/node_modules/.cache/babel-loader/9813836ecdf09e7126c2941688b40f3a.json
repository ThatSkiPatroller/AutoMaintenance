{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Trace\\\\codeWork\\\\AutoMaintenance\\\\carmaintenance\\\\src\\\\components\\\\Signup\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, TextField, Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport './style.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  username: Yup.string().max(15, \"Username is too long\").min(6, \"Username is too short\").required(\"A username is required\"),\n  email: Yup.string().email(\"Email is invalid\").required(\"An email is required\"),\n  password: Yup.string().required(\"A password is required\"),\n  confirm_password: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords do not match\")\n});\n\nfunction Signup() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      username: 'username',\n      email: 'email',\n      password: 'password',\n      confirm_password: 'confirm password'\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        id: \"signupmsg\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          id: \"username\",\n          placeholder: \"username\",\n          value: formik.values.username,\n          onChange: formik.handleChange,\n          error: formik.touched.username && Boolean(formik.errors.username),\n          helperText: formik.touched.username && formik.errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          id: \"email\",\n          placeholder: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          variant: \"outlined\",\n          placeholder: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          id: \"confirm_password\",\n          placeholder: \"confirm_password\",\n          value: formik.values.confirm_password,\n          onChange: formik.handleChange,\n          error: formik.touched.confirm_password && Boolean(formik.errors.confirm_password),\n          helperText: formik.touched.confirm_password && formik.errors.confirm_password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          id: \"button\",\n          variant: \"contained\",\n          fullWidth: true,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Signup, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/Trace/codeWork/AutoMaintenance/carmaintenance/src/components/Signup/Signup.js"],"names":["React","Component","useFormik","Yup","Button","TextField","Card","CardContent","Grid","Typography","axios","validationSchema","object","shape","username","string","max","min","required","email","password","confirm_password","oneOf","ref","Signup","formik","initialValues","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, TextField, Card, CardContent, Grid, Typography} from '@material-ui/core';\r\nimport './style.css';\r\nimport axios from 'axios';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n    .max(15, \"Username is too long\")\r\n    .min(6, \"Username is too short\")\r\n    .required(\"A username is required\"),\r\n    email: Yup.string()\r\n    .email(\"Email is invalid\")\r\n    .required(\"An email is required\"),\r\n    password: Yup.string().required(\"A password is required\"),\r\n    confirm_password: Yup.string().oneOf(\r\n        [Yup.ref(\"password\"), null],\r\n        \"Passwords do not match\"\r\n    )\r\n});\r\n\r\nfunction Signup () {\r\n    \r\n    const formik = useFormik({\r\n        initialValues: {\r\n            username: 'username',\r\n            email: 'email',\r\n            password: 'password',\r\n            confirm_password: 'confirm password',\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            alert(JSON.stringify(values, null, 2))\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"column\">\r\n            \r\n            <Typography variant=\"h3\" id=\"signupmsg\">Signup</Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    id=\"username\"\r\n                    placeholder=\"username\"\r\n                    value={formik.values.username}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.username && Boolean(formik.errors.username)}\r\n                    helperText={formik.touched.username && formik.errors.username}\r\n                />\r\n                <br></br>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    id=\"email\"\r\n                    placeholder=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n                <br></br>\r\n                <TextField\r\n                    id=\"password\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"password\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                />\r\n                <br></br>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    id=\"confirm_password\"\r\n                    placeholder=\"confirm_password\"\r\n                    value={formik.values.confirm_password}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.confirm_password && Boolean(formik.errors.confirm_password)}\r\n                    helperText={formik.touched.confirm_password && formik.errors.confirm_password}\r\n                />\r\n                <br></br>\r\n                <Button color=\"primary\" id=\"button\" variant=\"contained\" fullWidth type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </form>\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}